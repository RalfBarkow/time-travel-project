{
	"__schema" : "4.1",
	"__type" : "page",
	"uid" : {
		"__type" : "uuid",
		"uuid" : "1e308d88-f89c-0d00-9388-81ca09d862f9"
	},
	"pageType" : {
		"__type" : "namedPage",
		"title" : "Introduction"
	},
	"children" : {
		"__type" : "snippets",
		"items" : [
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-06-04T05:26:36.672776+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-06-04T05:26:36.672776+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "sOuNiPicDQCTiRXlCdhi+Q=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "You get a raise on 1 March but the system doesn’t find out about it until mid-May. In the meantime, who knows what happens? Reconciling these two time lines, world time and system time, is one of the most difficult problems to solve in writing information systems. Many of the actions in business are irreversible. It is complicated and expensive to take an incorrect check back. To “make the check right”, you must discover what happened and to fix the situation."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-06-04T05:26:44.85241+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-06-04T05:26:44.85241+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "ImONi/icDQCTj1JkCdhi+Q=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Another significant problem of writing business information systems is that the rhythms of the world are not the rhythms of the system. You would like to make changes, like giving an employee a raise in the middle of a pay period if that made sense. You would then like the system to behave reasonably under these conditions"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-06-04T05:26:51.423091+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-06-04T05:26:51.423091+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "NiLxi/icDQCTkYbYCdhi+Q=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "The simplest business option for dealing with the difference between world time and system time is just to ignore the distinction and hope nobody notices. We have seen many systems that took exactly this approach. If the customers are unlikely to notice and the consequences are small enough, you might get away with pretending that all changes are instantaneous and perfect, perhaps even forever."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-06-04T05:27:01.875301+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-06-04T05:27:01.875301+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "Z1WSjPicDQCTk0AiCdhi+Q=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "This isn’t a very satisfying answer, nor is it an adequate solution when the consequences of\ncalculating the wrong answer are severe or if not being able to fix an answer that later proves to be wrong causes hurts the business."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-06-04T05:27:08.968171+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-06-04T05:27:08.968171+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "iKj6jPicDQCTlR81Cdhi+Q=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Solving two problems when time flows by at two different rates-\n• navigating through changes,\n• processing changes on a time scale dictated by the business and not by the system-\nis the focus of this pattern language."
			}
		]
	},
	"createEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"createTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2022-06-04T05:25:54.015393+02:00"
		}
	},
	"editEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"editTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2022-06-04T05:25:54.015393+02:00"
		}
	}
}