{
	"__schema" : "4.1",
	"__type" : "page",
	"uid" : {
		"__type" : "uuid",
		"uuid" : "ef0ebace-f99c-0d00-b277-f9e20aacc1f3"
	},
	"pageType" : {
		"__type" : "namedPage",
		"title" : "Version History"
	},
	"children" : {
		"__type" : "snippets",
		"items" : [
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-06-05T16:46:45.409342+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-06-05T16:46:45.409342+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "LUtTKRadDQC18CxCAb1ZzQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Things change. You’d like to know what happened when. But people (and processes and\rorganizations) are imperfect. Put these three facts together and you are faced with a\rchallenge. How do you construct objects that can record and compute correctly in spite of\rimperfect recording of change?\r\rSplit one conceptual object into two parts, one part that doesn’t change, the History, and one\rpart that does change, the Version. Give the History messages to store and retrieve versions\rsimilar to keyed access to a collection.\r\r• History>>versionAt: aTime put: aVersion - Says that from the point of view of aTime, the Version in force is now aVersion\r• History>>versionAt: aTime – Returns the version visible from aTime"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-06-04T06:58:21.486284+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-06-05T16:46:45.471133+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "Vy+7zvmcDQCyeH8xCqzB8w=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Using Time Travel, we can refactor the naïve test case into one that can remember changing pay rates. For now we can use simple Dates as the lookup key.\n\rNavigationTest>>#testPayToday\r```\r| contract version |\rcontract := Contract new.\rversion := ContractVersion pay: 1000.\rcontract versionAt: '2/1/99' asDate put: version.\rself assert: (contract versionAt: '2/1/99' asDate) pay = 1000\r```"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-06-04T07:35:58.309807+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-06-05T16:51:24.965623+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "bJOwWfqcDQCy9iNVCqzB8w=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "With this in place, we can implement the two visible methods in Contract: `#versionAt:put:` and\n`#versionAt:`. (In some cases you will want to make a Safe Copy of the Version before you store it, but we are just careful not to modify a Version after we have stored it in a History.)\n"
			},
			{
				"__type" : "pharoSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-06-05T16:51:20.897665+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-06-05T16:51:26.843816+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "xPy+ORadDQC19StaAb1ZzQ=="
				},
				"code" : "Contract>>versionAt: aDate put: aVersion\naVersion date: aDate.\nself versions add: aVersion"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-06-04T07:37:25.777857+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-06-04T07:37:34.289519+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "HmLTXvqcDQCy+Ek1CqzB8w=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "[[Most Recent First]]"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-06-04T07:38:07.747101+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-06-04T07:38:40.104775+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "sJVhYfqcDQCzAGC7CqzB8w=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "The instance variable “versions” will be lazily initialized to a SortedCollection of Versions."
			},
			{
				"__type" : "pharoSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-06-04T07:38:15.020119+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-06-04T07:38:30.095869+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "oU7fYfqcDQCzAkXmCqzB8w=="
				},
				"code" : "Contract>>versions\nversions isNil ifTrue: [versions := SortedCollection sortBlock: [:a :b | a date > b date]].\n^versions"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-06-04T07:39:17.975447+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-06-04T07:39:17.975447+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "c/aRZfqcDQCzBHX6CqzB8w=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Now we can implement Contract>>versionAt:"
			},
			{
				"__type" : "pharoSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-06-04T07:39:29.201762+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-06-04T07:39:29.740458+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "qDpLZvqcDQCzBmpECqzB8w=="
				},
				"code" : "Contract>>versionAt: aDate\n^self versions detect: [:each | aPerspective > each date]"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-06-04T07:39:58.115804+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-06-04T07:39:58.115804+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "vFYEaPqcDQCzChrECqzB8w=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "The next test case shows that we can look up pay rates even if the pay rate changes:\nNavigationTest>>testPayLastMonth"
			},
			{
				"__type" : "pharoSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-06-04T07:40:08.515722+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-06-04T07:40:09.154311+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "wRyjaPqcDQCzDrgjCqzB8w=="
				},
				"code" : "| contract firstVersion secondVersion |\ncontract := Contract new.\nfirstVersion := ContractVersion pay: 1000.\ncontract versionAt: '1/1/99' asDate put: firstVersion.\nsecondVersion := ContractVersion pay: 2000.\ncontract versionAt: '2/1/99' asDate put: secondVersion.\nself assert: (contract versionAt: '1/1/99' asDate) pay = 1000.\nself assert: (contract versionAt: '2/1/99' asDate) pay = 2000"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-06-04T07:39:54.410903+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-06-04T07:40:01.207376+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "1Yi1Z/qcDQCzCLlLCqzB8w=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "This test case is already satisfied by the code above."
			}
		]
	},
	"createEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"createTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2022-06-04T06:57:06.328461+02:00"
		}
	},
	"editEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"editTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2022-06-04T06:57:06.328461+02:00"
		}
	}
}